<!DOCTYPE html>
<html lang="en-us">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="description" content="{%if title %} {{title}} : {{summary}} : {% endif %} The personal website of Brian Muenzenmeyer.">
  <link rel="stylesheet" href="/css/style.css">

  <!-- favicon -->
  <link rel="apple-touch-icon" sizes="120x120" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  <meta name="msapplication-TileColor" content="#2b5797">
  <meta name="theme-color" content="#ffffff">

  <title>{%if title %} {{title}} : {% endif %}Brian Muenzenmeyer</title>
  {%if customCSS %}
      <link rel="stylesheet" href="/css/{{ customCSS }}.css">
  {% endif %}

  <!-- fonts -->

  <style>
    @font-face {
      font-family: Novela;
      src: url('/fonts/novela-regular-webfont.woff2') format('woff2'),
          url('/fonts/novela-regular-webfont.woff') format('woff');
    }
    @font-face {
      font-family: Novela;
      src: url('/fonts/novela-bold-webfont.woff2') format('woff2'),
          url('/fonts/novela-bold-webfont.woff') format('woff');
      font-weight: 700;
    }

    @font-face {
      font-family: Novela;
      src: url('/fonts/novela-regularitalic-webfont.woff2') format('woff2'),
          url('/fonts/novela-regularitalic-webfont.woff') format('woff');
      font-style: italic;
    }

    @font-face {
      font-family: Novela;
      src: url('/fonts/novela-bolditalic-webfont.woff2') format('woff2'),
          url('/fonts/novela-bolditalic-webfont.woff') format('woff');
      font-weight: 700;
      font-style: italic;
    }

    body {
      font-family: serif;
    }
    .fonts-loaded body {
      font-family: Novela, serif;
    }
  
  </style>

  <script>
    (function() {

      // Optimization for Repeat Views
      if( sessionStorage.fontsLoadedFoutWithClass ) {
        document.documentElement.className += " fonts-loaded";
        return;
      }

      if( "fonts" in document ) {
        Promise.all([
          document.fonts.load("1em Novela"),
          document.fonts.load("700 1em Novela"),
          document.fonts.load("italic 1em Novela"),
          document.fonts.load("italic 700 1em Novela")
        ]).then(function () {
          document.documentElement.className += " fonts-loaded";

          // Optimization for Repeat Views
          sessionStorage.fontsLoadedFoutWithClass = true;
        });
      }
    })();
  </script>
</head>

<body>

  {% include "homelink.njk" %}

  <main>
      {{ content | safe }}
  </main> 

  <footer class="footer">
    <div class="footer__container">
      <div class="footer__bio">
        <img class="footer__avatar" src="https://www.gravatar.com/avatar/79024f1fe6d866159a95868721136084?s=200" alt="An image of Brian Muenzenmeyer"/>
        <div class="footer__intro">
          <div class="footer__fact">Brian Muenzenmeyer</div>
          <div class="footer__fact">Lead Front End Engineer</div>
          <div class="footer__fact">The Sneelock of the Circus. When not online, I am trying to find my ‚òï.</div>
        {% include "socialnav.njk" %}
        </div>
      </div>
      <div class="footer__colophon">
        <div class="footer__fact">Scaffolded with <a href="https://github.com/bmuenzenmeyer/pantograph">Pantograph</a>. <abbr title="HyperText Markup Language">HTML</abbr> and <abbr title="Cascading Style Sheets">CSS</abbr> combined via <a href="https://www.11ty.dev/">11ty</a> and hosted atop <a href="https://www.netlify.com/">Netlify</a>.</div>
        <div class="footer__fact">Gorilla Logo designed by <a href="https://desandro.com/">David DeSandro</a>.</div>
        <div class="footer__fact">
          <a href="/arcade">üëæ Arcade</a>
          <a href="/walls">üé® Walls</a>
          <a href="/versions">üëª Versions</a>
          <a href="/styleguide">‚öõÔ∏è Styleguide</a> 
          <a href="/feed.xml">üìü RSS</a>
        </div> 
      </div>

    </div>
  </footer>

  <script>

!function(){"use strict";if(self.CSS&&CSS.paintWorklet){const e=document.createElement("style");e.textContent='@property --fleck-colors{syntax:"<color>+";initial-value:#000 #fff;inherits:true}@property --fleck-seed{syntax:"<integer>";initial-value:1;inherits:true}@property --fleck-cell-size{syntax:"<integer>";initial-value:300;inherits:true}@property --fleck-density{syntax:"<integer>";initial-value:300;inherits:true}@property --fleck-size-base{syntax:"<length>";initial-value:4px;inherits:true}',document.head.append(e);const t=new Blob(['!function(){"use strict";const t=new Float64Array([-.304,-1,0,-1,.304,-1,.592,-.861,.782,-.623,.972,-.386,1.043,-.074,.975,.223,.907,.519,.708,.769,.434,.901,.16,1.033,-.16,1.033,-.434,.901,-.708,.769,-.907,.519,-.975,.223,-1.043,-.074,-.972,-.386,-.782,-.623,-.592,-.861]),e=new Float64Array(t.length);function s(s,n,l,a,o,r){e.set(t);for(let t=0;t<e.length;t+=6){const s=.5*n.next(),l=n.next()*Math.PI*2,a=Math.sin(l)*s,o=Math.cos(l)*s;e[t]+=a,e[t+1]+=o,e[t+2]+=a,e[t+3]+=o,e[t+4]+=a,e[t+5]+=o}s.fillStyle=r,s.setTransform(o,0,0,o,l,a),function(t){t.beginPath(),t.moveTo(e[2],e[3]);for(let s=0;s<e.length;s+=6){const n=s+6===e.length?0:s+6;t.bezierCurveTo(e[s+4],e[s+5],e[n],e[n+1],e[n+2],e[n+3])}t.closePath()}(s),s.fill(),s.resetTransform()}class n{constructor(t){this.state=t}next(){this.state|=0,this.state=this.state+1831565813|0;var t=Math.imul(this.state^this.state>>>15,1|this.state);return(((t=t+Math.imul(t^t>>>7,61|t)^t)^t>>>14)>>>0)/4294967296}nextBetween(t,e){return t+(e-t)*this.next()}fork(){return new n(this.next()*2**32)}}registerPaint("fleck",class{static inputProperties=["--fleck-seed","--fleck-cell-size","--fleck-density","--fleck-size-base","--fleck-colors"];paint(t,e,l){const a=e.width,o=e.height,r=l.get("--fleck-seed").value,i=l.get("--fleck-cell-size").value,c=l.get("--fleck-density").value,f=l.get("--fleck-size-base").value,h=l.getAll("--fleck-colors").map((t=>t.toString())),u=new n(r);for(let e=0;e<a;e+=i){const n=u.fork();for(let l=0;l<o;l+=i){const a=n.fork();for(let n=0;n<c;n++){let n=f;a.next()>.125&&(n/=2),a.next()>.925&&(n*=4),n=Math.max(1,Math.min(n,24)),n*=.7;const o=h[Math.floor(a.nextBetween(0,h.length))];s(t,a,e+a.nextBetween(0,i),l+a.nextBetween(0,i),n,o)}}}}})}();\n'],{type:"text/javascript"}),n=URL.createObjectURL(t);CSS.paintWorklet.addModule(n)}}();

  </script>

  <script type="module" src="https://unpkg.com/@github/time-elements@3.1.2/dist/index.js?module"></script>

</body>
</html>