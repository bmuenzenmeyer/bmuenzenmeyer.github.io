{
  "name": "patternlab-node",
  "description": "Pattern Lab is a collection of tools to help you create atomic design systems. This is the node command line interface (CLI).",
  "version": "0.1.6",
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-contrib-sass": "~0.2.2",
    "grunt-contrib-copy": "~0.4.0",
    "grunt-contrib-jshint": "~0.4.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-nodeunit": "~0.3.0",
    "grunt-contrib-connect": "^0.8.0",
    "mustache": "~0.8.1",
    "matchdep": "~0.3.0",
    "fs-extra": "^0.10.0",
    "diveSync": "^0.2.1"
  },
  "keywords": [
    "Pattern Lab",
    "Atomic Web Design",
    "Node",
    "Grunt",
    "Javascript"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/pattern-lab/patternlab-node.git"
  },
  "author": {
    "name": "Brian Muenzenmeyer"
  },
  "license": "MIT",
  "scripts": {
    "test": "grunt travis --verbose"
  },
  "engines": {
    "node": ">=0.1"
  },
  "readme": "[![Build Status](https://travis-ci.org/pattern-lab/patternlab-node.png?branch=master)](https://travis-ci.org/pattern-lab/patternlab-node) \r\n\r\n## About the Node Version of Pattern Lab\r\n\r\nThe Node version of Pattern Lab is, at its core, a static site generator. It combines platform-agnostic assets, like the [Mustache](http://mustache.github.io/)-based patterns and the JavaScript-based viewer, with a Node-based \"builder\" that transforms and dynamically builds the Pattern Lab site. By making it a static site generator, the Node version of Pattern Lab strongly separates patterns, data, and presentation from build logic. The Node version is a work in progress, the [PHP version](https://github.com/pattern-lab/patternlab-php) should be seen as a reference for other developers to improve upon as they build their own Pattern Lab Builders in their language of choice.\r\n\r\n### Getting Started\r\n\r\nTo run patternlab-node, just do the following from the command line at the root of patternlab-node: \r\n\r\n1. `npm install`\r\n2. `npm install -g grunt-cli`\r\n3. `grunt`  \r\n\r\nThis creates all patterns, the styleguide, and the pattern lab site.\r\n\r\n### Command Line Interface\r\n\r\nThe following are grunt task arguments you may execute:\r\n\r\n##### `patternlab`\r\nWith no arguments, patternlab runs the full builder, compiling patterns, and constructing the front-end site.\r\n\r\n##### `patternlab:only_patterns`\r\nCompile the patterns only, outputting to ./public/patterns\r\n\r\n##### `patternlab:v`\r\nRetrieve the version of patternlab-node you have installed\r\n\r\n##### `patternlab:help`\r\nGet more information about patternlab-node, pattern lab in general, and where to report issues.\r\n\r\n### Config Options\r\n\r\n##### Watching Changes\r\nTo have patternlab-node watch for changes to either a mustache template, data, or stylesheets, run `grunt watch`. The `Gruntfile` governs what is watched. It should be easy to add scss or whatever preprocessor you fancy.\r\n\r\n##### Nav Bar Controls\r\nIf you don't have a need for some of the nav-bar tools in the patternlab frontend, you can turn them off in `config.json`.\r\n\r\nThe current selection is as follows. It reflects support versus patternlab-php.\r\n\r\n```\r\n\"ishControlsVisible\": {\r\n\t\"s\": true,\r\n\t\"m\": true,\r\n\t\"l\": true,\r\n\t\"full\": true,\r\n\t\"ranndom\": true,\r\n\t\"disco\": true,\r\n\t\"hay\": true,\r\n\t\"mqs\": false,\r\n\t\"find\": false,\r\n\t\"views-all\": true,\r\n\t\"views-annotations\": true,\r\n\t\"views-code\": true,\r\n\t\"views-new\": true,\r\n\t\"tools-all\": true,\r\n\t\"tools-follow\": false,\r\n\t\"tools-reload\": false,\r\n\t\"tools-shortcuts\": false,\r\n\t\"tools-docs\": true\r\n}\r\n```\r\n\r\n##### Verbose Mode\r\n`patternlab.json` is a file created for debugging purposes. Set `debug` to true in `.config.json` to see all the secrets.\r\n\r\n##### Pattern States\r\nYou can set the state of a pattern by including it in `config.json` too. The out of the box styles are in progress (orange), in review (yellow), and complete (green).\r\nPattern states should be lowercase and use hyphens where spaces are present.\r\n```\r\n\"patternStates\": {\r\n\t\"colors\" : \"inprogress\",\r\n\t\"fonts\" : \"inreview\",\r\n\t\"three-up\" : \"complete\"\r\n}\r\n```\r\n\r\n##### Server\r\nRunning `grunt serve` will compile the patternlab front end and host it on <a href=\"http://localhost:9001\">http://localhost:9001</a> by default. Page will reload on any saved source code change.\r\n\r\n===\r\n\r\nThe Node version of Pattern Lab is maintained by [@bmuenzenmeyer](https://twitter.com/bmuenzenmeyer) and contributors. Pull requests welcome, but please take a moment to read the [guidelines](https://github.com/pattern-lab/patternlab-node/blob/master/CONTRIBUTING.md).\r\n\r\n### Forward, To the Specification!\r\n\r\nDave Olsen has published the [specification](https://github.com/pattern-lab/the-spec/blob/draft/SPEC.md) for Pattern Lab ports. Development will be oriented toward compliance with this as the spec and the port mature together. \r\n\r\n### Is Pattern Lab a Platform or a Build Tool?\r\n\r\nA lot of good conversation has revolved around whether Pattern Lab is a platform or a tool in the toolbox, part of a larger solution. It's my goal to #1) adhere to the specification and #2) meet the needs of both use cases.\r\n\r\nIf you want to only build the patterns, alter your `Gruntfile.js` patternlab task to the following:\r\n\r\n```\r\ngrunt.registerTask('default', ['clean', 'concat', 'patternlab:only_patterns', /*'sass',*/ 'copy']);\r\n```\r\n\r\nThis will output compiled patterns to ./public/patterns/\r\n\r\n### Where is the Gulp Version?\r\n\r\nThe core patternlab engine is free of any dependencies to grunt, allowing users to integrate with gulp if desired. Future efforts here will orient towards [this gulp implementation](https://github.com/oscar-g/patternlab-node/tree/dev-gulp) by [oscar-g](https://github.com/oscar-g).\r\n\r\n===\r\n\r\n## Working with Patterns\r\n\r\n(The following documentation is built for the PHP version of Pattern Lab, but most applies to the node version too. If you find omissions or mistakes please open an issue.)\r\n\r\nPatterns are the core element of Pattern Lab. Understanding how they work is the key to getting the most out of the system. Patterns use [Mustache](http://mustache.github.io/) so please read [Mustache's docs](http://mustache.github.io/mustache.5.html) as well.\r\n\r\n* [How Patterns Are Organized](http://patternlab.io/docs/pattern-organization.html)\r\n* [Adding New Patterns](http://patternlab.io/docs/pattern-add-new.html)\r\n* [Reorganizing Patterns](http://patternlab.io/docs/pattern-reorganizing.html)\r\n* [Including One Pattern Within Another via Partials](http://patternlab.io/docs/pattern-including.html)\r\n* [Managing Assets for a Pattern: JavaScript, images, CSS, etc.](http://patternlab.io/docs/pattern-managing-assets.html)\r\n* [Modifying the Pattern Header and Footer](http://patternlab.io/docs/pattern-header-footer.html)\r\n* [Using Pattern Parameters](http://patternlab.io/docs/pattern-parameters.html)\r\n* [Using Pattern State](http://patternlab.io/docs/pattern-states.html)\r\n* [\"Hiding\" Patterns in the Navigation](http://patternlab.io/docs/pattern-hiding.html)\r\n* [Adding Annotations](http://patternlab.io/docs/pattern-adding-annotations.html)\r\n* [Viewing Patterns on a Mobile Device](http://patternlab.io/docs/pattern-mobile-view.html)\r\n\r\n## Creating & Working With Dynamic Data for a Pattern\r\n\r\nThe Node version of Pattern Lab utilizes Mustache as the template language for patterns. In addition to allowing for the [inclusion of one pattern within another](http://patternlab.io/docs/pattern-including.html) it also gives pattern developers the ability to include variables. This means that attributes like image sources can be centralized in one file for easy modification across one or more patterns. The Node version of Pattern Lab uses a JSON file, `source/_data/data.json`, to centralize many of these attributes.\r\n\r\n* [Introduction to JSON & Mustache Variables](http://patternlab.io/docs/data-json-mustache.html)\r\n* [Overriding the Central `data.json` Values with Pattern-specific Values](http://patternlab.io/docs/data-pattern-specific.html)\r\n* [Linking to Patterns with Pattern Lab's Default `link` Variable](http://patternlab.io/docs/data-link-variable.html)\r\n* [Creating Lists with Pattern Lab's Default `listItems` Variable](http://patternlab.io/docs/data-listitems.html)\r\n\r\n## Using Pattern Lab's Advanced Features\r\n\r\nBy default, the Pattern Lab assets can be manually generated and the Pattern Lab site manually refreshed but who wants to waste time doing that? Here are some ways that Pattern Lab can make your development workflow a little smoother:\r\n\r\n* [Watching for Changes and Auto-Regenerating Patterns](http://patternlab.io/docs/advanced-auto-regenerate.html) - Node version coming soon\r\n* [Auto-Reloading the Browser Window When Changes Are Made](http://patternlab.io/docs/advanced-reload-browser.html) - Node version coming soon\r\n* [Multi-browser & Multi-device Testing with Page Follow](http://patternlab.io/docs/advanced-page-follow.html)\r\n* [Keyboard Shortcuts](http://patternlab.io/docs/advanced-keyboard-shortcuts.html) \r\n* [Special Pattern Lab-specific Query String Variables ](http://patternlab.io/docs/pattern-linking.html)\r\n* [Preventing the Cleaning of public/](http://patternlab.io/docs/advanced-clean-public.html) - Node version coming soon\r\n* [Modifying the Pattern Lab Nav](http://patternlab.io/docs/advanced-pattern-lab-nav.html) - Node version coming soon\r\n* [Editing the config.ini Options](http://patternlab.io/docs/advanced-config-options.html) - Node version coming soon\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pattern-lab/patternlab-node/issues"
  },
  "homepage": "https://github.com/pattern-lab/patternlab-node",
  "_id": "patternlab-node@0.1.6",
  "_from": "patternlab-node@"
}
