{
	"title": "Brian Muenzenmeyer",
	"description": "The personal site of Brian Muenzenmeyer.",
	"link": "http://bmuenzenmeyer.github.io",
	"posts" : [
		
			{
			"title": "The Technical Stack",
			"description": "<h1 id="the-technical-stack">The Technical Stack</h1><br /><br /><div class="meta">12/26/14 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p><code>Testing code</code></p><br /><br /><div class="highlight"><pre><code class="language-java" data-lang="java"><span class="lineno">1</span> <span class="n">def</span> <span class="n">show</span><br /><span class="lineno">2</span>   <span class="n">puts</span> <span class="s">&quot;Outputting a very lo-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-ong lo-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-ong line&quot;</span><br /><span class="lineno">3</span>   <span class="nd">@widget</span> <span class="o">=</span> <span class="n">Widget</span><span class="o">(</span><span class="n">params</span><span class="o">[:</span><span class="n">id</span><span class="o">])</span><br /><span class="lineno">4</span>   <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="n">format</span><span class="o">|</span><br /><span class="lineno">5</span>     <span class="n">format</span><span class="o">.</span><span class="na">html</span> <span class="err">#</span> <span class="n">show</span><span class="o">.</span><span class="na">html</span><span class="o">.</span><span class="na">erb</span><br /><span class="lineno">6</span>     <span class="n">format</span><span class="o">.</span><span class="na">json</span> <span class="o">{</span> <span class="n">render</span> <span class="nl">json:</span> <span class="nd">@widget</span> <span class="o">}</span><br /><span class="lineno">7</span>   <span class="n">end</span><br /><span class="lineno">8</span> <span class="n">end</span></code></pre></div><br /><br /><div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="lineno">1</span> <span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><br /><span class="lineno">2</span>   <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;test&#39;</span><span class="p">);</span><br /><span class="lineno">3</span> <span class="p">});</span></code></pre></div><br />",
			"blurb": "",
			"pubDate": "Fri, 26 Dec 2014 00:00:00 -0600",
			"link": "http://bmuenzenmeyer.github.io/the-technical-stack"
			
			},
			
		
			{
			"title": "A Performant Foundation",
			"description": "<h1 id="a-performant-foundation">A Performant Foundation</h1><br /><br /><div class="meta">12/24/14 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p>A great thing about writing <a href="http://brianmuenzenmeyer.com">brianmuenzenmeyer.com</a> from the ground up is the ability to keep an eye on performance from the onset.</p><br /><br /><p><a href="http://timkadlec.com/2013/01/setting-a-performance-budget/">Tim Kadlec reminds us to set a performance budget</a>, and with a new start and bare-bones content, interaction, and styling, there is nothing standing in the way delivering a performant experience to users.</p><br /><br /><p>Utilizing the excellent <a href="http://www.webpagetest.org/">webpagetest.org service</a>, I ran <a href="http://bmuenzenmeyer.github.io/">bmuenzenmeyer.github.io/</a> through a quick run to baseline some initial performance metrics.</p><br /><br /><p><img src="http://bmuenzenmeyer.github.io/img/webpagetest_foundation.png" alt="The webpagetest.org results for the site" /></p><br /><br /><p>As you can see, I achieve sub-second results, but there are still things that could be improved. I am already taking quite the hit by serving uncompressed assets, and for that matter, I am not always serving them against an optimal rendering path.</p><br /><br /><p>I’ll be adding <a href="https://github.com/bmuenzenmeyer/bmuenzenmeyer.github.io/issues">github issues</a> for each thing that comes out of this initial analysis - and I may update this post too.</p><br /><br /><p>Oh, and about that budget? I want to keep page load under 1.5 seconds if I can, and requests under 15. These are, for me, a bit arbitrary, but I’d rather have a target to start measuring against. If you want to learn more about performance, measured, or perceived, please watch my slidedeck on this topic at : <a href="https://speakerdeck.com/bmuenzenmeyer/performance-enhancement-testing-positive">https://speakerdeck.com/bmuenzenmeyer/performance-enhancement-testing-positive</a>!</p><br />",
			"blurb": "",
			"pubDate": "Wed, 24 Dec 2014 00:00:00 -0600",
			"link": "http://bmuenzenmeyer.github.io/a-performant-foundation"
			
			},
			
		
			{
			"title": "Site Redesign in the Open",
			"description": "<h1 id="site-redesign-in-the-open">Site Redesign in the Open</h1><br /><br /><div class="meta">12/21/14 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p>It’s time for another reboot of <a href="http://brianmuenzenmeyer.com">brianmuenzenmeyer.com</a>.</p><br /><br /><p>I put a lot of time into the current tumblr site - especially in crafting the masthead. But I find it limiting, and reactionary, crafted from one idea with little creative room to grow. It was essentially a one-off idea, not an identity I want to associate myself with or build a brand on. There was no system backing the concept, or allowing a cohesive vision to be designed, iterated on, or maintained. </p><br /><br /><p>So it’s time to start over - and this time to <a href="http://bradfrost.com/blog/post/designing-in-the-open/">do it in the open</a>. What comes will be a reflective exercise in branding, atomic design, and process. Along the way I will try to share insights, challenges, and little tips along the way. I encourage a discussion.</p><br /><br /><p>My goals include:</p><br /><br /><ul><br />  <li>Creating a development environment that is maintainable, flexible, and simple to blog and experiment on top of.</li><br />  <li>Establishing a design system that build upon core principles and is representative of me across differing contexts.</li><br />  <li>Making a performant, mobile-first web-presence</li><br />  <li>Creating a hub for all things I care about</li><br /></ul><br /><br /><p>As for now, the site it rather bare-bones - but intentionally so. We’ll probably start with a description of the development environment. Stay tuned!</p><br />",
			"blurb": "",
			"pubDate": "Sun, 21 Dec 2014 00:00:00 -0600",
			"link": "http://bmuenzenmeyer.github.io/site-redesign-in-the-open"
			
			},
			
		
			{
			"title": "Pattern Lab Node 1.6 Released",
			"description": "<h1 id="pattern-lab-node-16-released">Pattern Lab Node 1.6 Released</h1><br /><br /><div class="meta">12/11/14 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p><a href="https://github.com/pattern-lab/patternlab-node">Patternlab 1.6 </a> was just released on github. This version has basic lineage support, found breakpoints in css added to ish-controls, and more unit tests!</p><br /><br /><p>More lineage support to follow, along with fixes to the code viewer.</p><br />",
			"blurb": "",
			"pubDate": "Thu, 11 Dec 2014 00:00:00 -0600",
			"link": "http://bmuenzenmeyer.github.io/pattern-lab-node-1-6-released"
			
			},
			
		
			{
			"title": "NEWDUG Presentation Slides: Performance Enhancement - Testing Positive",
			"description": "<h1 id="newdug-presentation-slides-performance-enhancement---testing-positive">NEWDUG Presentation Slides: Performance Enhancement - Testing Positive</h1><br /><br /><div class="meta">11/13/14 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p>Here are the slides from my NEWDUG Presentation: <em>Performance Enhancement - Testing Positive</em></p><br /><br /><p>Creating high-performance experiences is both art and science - but it’s never an accident. In an ever-increasing landscape of choice and expectations for your users, you must learn to leverage tools, process, and those around you to craft optimal outcomes.</p><br /><br /><p>Let’s start with the basics - and then do some deep dives into techniques deployed against real-life use cases. Measure progress throughout the workflow, and bring your message front and center, faster. Challenge yourself, your coworkers, and your boss to design, develop, and deliver performance.</p><br /><br /><script async="" class="speakerdeck-embed" data-id="284759604cb9013204a7665a6dda38ed" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script><br /><br />",
			"blurb": "",
			"pubDate": "Thu, 13 Nov 2014 00:00:00 -0600",
			"link": "http://bmuenzenmeyer.github.io/newdug-presentation-slides-performance-enhancement-testing-positive"
			
			},
			
		
			{
			"title": "Pattern Lab Node 1.2 Released",
			"description": "<h1 id="pattern-lab-node-12-released">Pattern Lab Node 1.2 Released</h1><br /><br /><div class="meta">07/20/14 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p>Just pushed patternlab-node 1.2, check out the release <a href="https://github.com/pattern-lab/patternlab-node/releases/tag/v0.1.2">here</a></p><br /><br /><p>Here is the changelog:</p><br /><br /><ul><br />  <li>ADD: Abstracted template rendering into a function for easier swapping of rendering engine</li><br />  <li>ADD: Smarter filtering of files to support other templates Thanks </li><br />  <li>ADD: Help command line agument</li><br />  <li>ADD: Version command line argument</li><br />  <li>ADD: Patterns only command line argument</li><br />  <li>ADD: IshControlsVisible options. Can now hide any ishControls you like.</li><br />  <li>ADD: Documented the command line interface</li><br />  <li>CHG: Put debug flag in conf.json instead of package.json</li><br />  <li>CHG: Aligned styleguide css with patternlab-php</li><br />  <li>FIX: Removed node .8 from travis</li><br />  <li>FIX: Code and annotation support in patternlab viewer</li><br />  <li>THX: thanks @ivanmayes and Shoptology crew for contibutions!</li><br /></ul><br /><br /><h4 id="more-change-coming">More change coming</h4><br /><p>Interest in patternlab-node is steadily increasing, as as such it needs to mature out of its brute-force port mentality. A notable watcher, <a href="https://twitter.com/addyosmani">Addy Osmani</a> says on his blog:</p><br /><br /><blockquote><br />  <p>First do it, then do it right, then do it better. This is one fundamental I always keep in mind when developing anything.</p><br /></blockquote><br /><br /><p>Patternlab node needs to do this. Next steps, extract patternlab-node into a core engine and allow different build systems to run it as a module. Grunt/Gulp, here we come!</p><br />",
			"blurb": "",
			"pubDate": "Sun, 20 Jul 2014 00:00:00 -0500",
			"link": "http://bmuenzenmeyer.github.io/pattern-lab-node-1-2-released"
			
			},
			
		
			{
			"title": "Pattern Lab Node 1.1 Released",
			"description": "<h1 id="pattern-lab-node-11-released">Pattern Lab Node 1.1 Released</h1><br /><br /><div class="meta">05/08/14 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p>I’ve just published <a href="https://github.com/pattern-lab/patternlab-node/releases/tag/v0.1.1">Pattern Lab Node 1.1 to Github</a>. It comes at the onset of a journey toward adherence to the <a href="https://github.com/pattern-lab/the-spec/blob/draft/SPEC.md">pattern lab specification</a> created by <a href="https://twitter.com/dmolsen">@dmolsen</a></p><br /><br /><h2 id="changelog">Changelog</h2><br /><p>This release cleans up some messy dependencies, and really sets the stage for more meaningful development.</p><br /><br /><ul><br />  <li>FIX: Removed View All Pattern SubItem Link Logic, no longer in reference implementation</li><br />  <li>ADD: Flag for generating debug file</li><br />  <li>ADD: Travis CI test support!</li><br />  <li>ADD: Contributing file</li><br />  <li>ADD: Repository to package.json</li><br />  <li>FIX: Manage Mustache dependency using NPM</li><br />  <li>THX: thank you <a href="https://github.com/tbranyen">@tbranyen</a> for tip on repository, Mustache, and NPM!</li><br /></ul><br /><br /><h2 id="toward-a-more-perfect-pattern-lab-node">Toward a More Perfect Pattern Lab Node</h2><br /><p>Stay tuned for <a href="https://github.com/pattern-lab/patternlab-node/issues/38">version 1.2</a>, already under development in the dev branch! With that version comes a moderate refactor of the builder, more unit tests, and some specification-mandated features. I also hope to get lineage and annotations functional - these have been gaps for too long.</p><br /><br /><p>Thanks for the continued interest and support in pattern lab and pattern lab node.</p><br />",
			"blurb": "",
			"pubDate": "Thu, 08 May 2014 00:00:00 -0500",
			"link": "http://bmuenzenmeyer.github.io/pattern-lab-node-1-1-released"
			
			},
			
		
			{
			"title": "On Pattern Lab - Node",
			"description": "<h1 id="on-pattern-lab---node">On Pattern Lab - Node</h1><br /><br /><div class="meta">04/21/14 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p><a href="https://twitter.com/davatron5000">Dave Rupert</a> sparked a conversation today about Patternlab after some initial usage, which elicited a nice round of feedback from others.</p><br /><br /><p><a href="https://twitter.com/bradfrost">Brad Frost</a> summed it up nicely:</p><br /><blockquote>It's been a process to make Pattern Lab simultaneously flexible and robust</blockquote><br /><br /><p>I want to put some thoughts to paper about how this process has played out for me.</p><br /><br /><p>Patternlab-PHP was rather feature-rich when I started. I likely missed the conversations Brad and Dave had about what PL should and shouldn’t be. It was simultaneously an amazing living reference, but also a skyscraper to understand, deconstruct and finally rebuild with different materials. <a href="https://twitter.com/dmolsen">Dave Olsen</a> helped immensely in those first steps.</p><br /><br /><p>I can feel the desire to turn PL into more than it already is, to turn it into a <em>platform</em> through which an entire project can grow, mature, and finally be deployed. I have also experienced first-hand the complexity that can creep into the solution when attempting to support so many features.</p><br /><br /><h2 id="to-me-pattern-lab-is">To me, Pattern Lab is:</h2><br /><ul><br />  <li><br />    <p>A tool to build reusable, scalable markup and css snippets. As Brad intended, you can decouple atomic design principles altogether if you so choose, but it’s also…</p><br />  </li><br />  <li><br />    <p>A tool to glue components together in an iterative, incremental fashion.</p><br />  </li><br />  <li><br />    <p>One of many ways a web project could be built, but not the only way. A multi-tool, but not the best for every job.</p><br />  </li><br />  <li><br />    <p>An alternative to photoshop comps and high-fidelity mockups as an acceptable design deliverable</p><br />  </li><br /></ul><br /><br /><p>So, as I reread this, and wonder at which features to implement next against the living spec that is the PHP version, I question what feels missing to me. (Also excited at the prospect of Dave and Brad writing a spec!) </p><br /><br /><h2 id="what-pain-points-have-i-experienced">What pain points have I experienced?</h2><br /><br /><ul><br />  <li><br />    <p><strong>Initial project setup is cumbersome.</strong> Hopefully some npm, grunt, dependency maturity in the near-term will help. As others have stated, attempting to obfuscate patternlab internals should be a goal. <a href="https://twitter.com/addyosmani">Addy Osmani</a> suggested a pure node implementation which would be most agnostic. To me, grunt feels more consumable than pure node. I need to look into Assemble.</p><br />  </li><br />  <li><br />    <p><strong>The iframe-viewer still gets me sometimes.</strong> Living in this responsive age, I naturally try to resize my window instead of using the controls. I’v felt at times that the ish controls are not perfect, but haven’t been able to determine if it’s my problem or something in the implementation yet. I wonder if this can be configurable.</p><br />  </li><br />  <li><br />    <p><strong>The port is inelegant and immature.</strong> I brute-forced the processing of templates, instead of globbing as the PHP version did initially. While I think this is straight-forward and decently documented, it is not DRY or unit-testable. A refactor would do some good.</p><br />  </li><br /></ul><br /><br /><p>As a peripheral member of the community, it’s exciting to see other’s interested in the same problems that drew me to Patternlab too. I’m also excited to see what ground we can make on PL-PHP :)</p><br />",
			"blurb": "",
			"pubDate": "Mon, 21 Apr 2014 00:00:00 -0500",
			"link": "http://bmuenzenmeyer.github.io/on-patternlab-node"
			
			},
			
		
			{
			"title": "The Device Test Imperative",
			"description": "<h1 id="the-device-test-imperative">The Device Test Imperative</h1><br /><br /><div class="meta">12/13/13 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p><em>This post refers to an old version of brianmuenzenmeyer.com, but the lesson is important.</em></p><br /><br /><p>When creating the masthead for this site, I was quick to ensure support in Chrome, Firefox, and IE 10-8. It was easy, I suggest <em>too easy</em>, to test the fluid layout and media queries by resizing the window, or using a tool like <a href="http://we-are-gurus.com/tools/responsive-design-tester.php">this one</a> to gut-check various viewports. </p><br /><br /><p>None of this, however, could satisfy the necessity of testing on a real mobile phone. Here’s what I saw on mobile Safari on my iPad and iPhone:</p><br /><br /><p><img src="http://media.tumblr.com/44579688d0cc9ae1959c70298ceb0936/tumblr_inline_mxic1fWSEw1s7cfvn.png" alt="The site on an iPhone, for some reason not adhering to the same viewport as desktop browsers." /></p><br /><br /><p>Frustrating! What could have caused this? I kicked into Firefox’s 3D mode, confirming the masthead’s 200% width trick was extending the page width, but my current <code>overflow: hidden</code> declarations were not being honored.</p><br /><br /><p>Some digging revealed that mobile Safari overflow rendering rules are different, and that I should try the following CSS.</p><br /><br /><pre><code>html{<br />    overflow-x: hidden;<br />}<br /></code></pre><br /><br /><p>Sure enough, fixed for all tested version of Safari.  Need to test Android and other devices, sure, but this was another small reminder to get into a browser - especially mobile browsers, as soon as possible.</p><br />",
			"blurb": "",
			"pubDate": "Fri, 13 Dec 2013 00:00:00 -0600",
			"link": "http://bmuenzenmeyer.github.io/the-device-test-imperative"
			
			},
			
		
			{
			"title": "Design is Parenting",
			"description": "<h1 id="design-is-parenting">Design is Parenting</h1><br /><br /><div class="meta">12/07/13 - <a href="https://twitter.com/bmuenzenmeyer">Brian Muenzenmeyer</a></div><br /><br /><p>When my son was born, I was obsessed with the temperature of his bath water.  What if it was too hot?  Too cold?  Which was worse?  We bought this plastic bathtub that had a built-in color-changing thermometer.  We were given a color-changing rubber ducky at the shower.  The baby books said between this degree and that degree, Celsius or Fahrenheit. No shortage of <a href="https://www.google.com/search?q=what+temperature+should+my+babies+bath+water+be">advice</a> existed on the web.  </p><br /><br /><p>Practice grew me adept at drawing X amount of hot water and Y amount of cold, and how to cancel mistakes or maintain temperature by adding Z amount of warm.  And always, if in doubt, I had my arsenal of thermometers. It took me months to gradually realize that if it was comfortable for me, it was comfortable for baby.  There is no formula.  Find comfortable.  Trust.</p><br /><br /><p>At <a href="http://aneventapart.com/event/seattle-2013">An Event Apart - Seattle</a>, there was a lot of discussion as to what design is, and what role we all play as designers.  Some definitions  included:</p><br /><br /><blockquote><br />  <p>Design is the rendering of intent.</p><br /></blockquote><br /><br /><blockquote><br />  <p>Design is moving things around until they look right.</p><br /></blockquote><br /><br /><blockquote><br />  <p><a href="http://www.abookapart.com/products/design-is-a-job">Design is a job</a></p><br /></blockquote><br /><br /><p>I think all of these are correct, however, I’d like to add my own:</p><br /><br /><h3 id="design-is-parenting-1">Design Is Parenting</h3><br /><p>In both design and parenting, there is an implicit desire to create, to shape, to guide and eventually let go.  I am not implying that my son is my client, by no means do I consider it that sort of relationship!  But really, you can distill a lot of interactions down to whether or not you give a damn to see how it turns out.  What matters most?  To me, parenting is caring enough not to give up on tough problems, constantly course-correcting.  It’s about trusting your gut, not what others say (though advice and basics never hurt).  You must tailor your approach to each changing day.  </p><br /><br /><p>And when you see the product of all your hard work first take steps, or fall and get back up, you breathe a sigh of relief that everything might be okay.  No one was born a good parent, or a good designer.  No such definitive guide could ever describe the perfect process, the playbook of teachable moments, or the motivation to continue on day after day, never really being done.</p><br /><br /><h3 id="love">Love</h3><br /><p>We try to set a good example.  When we are gone, we hope the world will be a better place for our efforts.</p><br />",
			"blurb": "",
			"pubDate": "Sat, 07 Dec 2013 00:00:00 -0600",
			"link": "http://bmuenzenmeyer.github.io/design-is-parenting"
			
			}
			
		
	]
}